plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.diffplug.spotless' version '7.0.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT dependency
    implementation "io.jsonwebtoken:jjwt-api:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.12.6"

    // redis
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // minio
    implementation("io.minio:minio:8.5.17")

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // test
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.springframework.restdocs:spring-restdocs-core'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'



    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

spotless {
    java {
        palantirJavaFormat()
        importOrder('java', 'javax', 'jakarta', 'org', 'lombok', 'com')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

tasks.register("addGitPreCommitHook", Copy) {
    from './script/pre-commit'
    into './.git/hooks'
}


ext {
    snippetsDir = file('build/generated-snippets')
}

def envProps = new Properties()
file('.env').withInputStream { stream ->
    stream.withReader('UTF-8') { reader ->
        reader.eachLine { line ->
            line = line.trim()
            if (line && !line.startsWith('#') && line.contains('=')) {
                def (k, v) = line.split('=', 2)
                envProps[k] = v
            }
        }
    }
}


tasks.named('test', Test) {
    useJUnitPlatform()
    outputs.dir snippetsDir
    environment envProps
}

asciidoctor {
    configurations 'asciidoctorExt'
    sourceDir = file('src/asciidoc')
    outputDir = file("build/docs/asciidoc")
    sources {
        include 'index.adoc'
        include 'api/*.adoc'

    }

    baseDirFollowsSourceFile()

    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
